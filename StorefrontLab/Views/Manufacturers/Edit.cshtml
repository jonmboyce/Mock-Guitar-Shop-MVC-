@model StorefrontLab.Data.EF.Manufacturer

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Manufacturers", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ManufacturerID)
    @Html.HiddenFor(model => model.Logo)
    
<div id="mainContentViews">
    <div id="productHeader">
        <div id="productHeaderRight">
            <div>
                @Html.LabelFor(model => model.ManufacturerName, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.ManufacturerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ManufacturerName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="clearfix"></div>
    </div>
    <div id="productLeft">
        <p>
            <img src="~/Content/images/@Model.Logo" alt="@Model.ManufacturerName" />
        </p>
    </div>
    <div id="productRight">
        <p>
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </p>
        <p>
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        </p>
        <p>
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
        </p>
        <p>
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
        </p>
    </div>
    <div class="clearfix"></div>
    <div id="productFooter">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Update Manufacturer" class="btn btn-default" />
        </div>
        <div class="clearfix"></div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
